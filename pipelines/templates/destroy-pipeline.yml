# Terraform Destroy Pipeline for TRL Hub and Spoke Infrastructure
# Use with extreme caution - this will destroy ALL infrastructure

trigger: none  # Manual trigger only

pr: none  # No PR triggers for destroy pipeline

variables:
  - group: trl-hubspoke-variables
  - name: terraformVersion
    value: '1.5.7'
  - name: azureSubscription
    value: 'trl-hubspoke-service-connection'

stages:
#================================================
# DESTROY CONFIRMATION STAGE
#================================================
- stage: DestroyConfirmation
  displayName: 'Destroy Confirmation and Planning'
  jobs:
  - job: ConfirmDestroy
    displayName: 'Confirm Destruction Intent'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        echo "‚ö†Ô∏è  WARNING: This pipeline will DESTROY ALL infrastructure!"
        echo "üî• This action is IRREVERSIBLE and will result in DATA LOSS!"
        echo "üìã Infrastructure to be destroyed:"
        echo "   - Hub Network (Firewall, Bastion, Key Vault)"
        echo "   - All Spoke Networks (VMs, Databases, Storage)"
        echo "   - Management Infrastructure"
        echo "   - ALL DATA AND CONFIGURATIONS"
        echo ""
        echo "‚úÖ Pipeline can proceed to destruction phase"
      displayName: 'Destruction Warning'

#================================================
# DESTROY SPOKE ENVIRONMENTS
#================================================
- stage: DestroySpokes
  displayName: 'Destroy Spoke Environments'
  dependsOn: DestroyConfirmation
  condition: succeeded()
  jobs:
  - deployment: DestroyDevSpokes
    displayName: 'Destroy Dev Spokes'
    environment: 'trl-hubspoke-destroy-dev'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: TerraformInstaller@0
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: $(terraformVersion)

          - task: AzureCLI@2
            displayName: 'Destroy Dev Spokes'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                cd workspaces/spokes/dev
                terraform init
                terraform destroy -auto-approve

  - deployment: DestroyStagingSpokes
    displayName: 'Destroy Staging Spokes'
    dependsOn: DestroyDevSpokes
    environment: 'trl-hubspoke-destroy-staging'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: TerraformInstaller@0
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: $(terraformVersion)

          - task: AzureCLI@2
            displayName: 'Destroy Staging Spokes'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                cd workspaces/spokes/staging
                terraform init
                terraform destroy -auto-approve

  - deployment: DestroyProdSpokes
    displayName: 'Destroy Production Spokes'
    dependsOn: DestroyStagingSpokes
    environment: 'trl-hubspoke-destroy-production'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: TerraformInstaller@0
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: $(terraformVersion)

          - task: AzureCLI@2
            displayName: 'Destroy Production Spokes'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                cd workspaces/spokes/prod
                terraform init
                terraform destroy -auto-approve

#================================================
# DESTROY MANAGEMENT INFRASTRUCTURE
#================================================
- stage: DestroyManagement
  displayName: 'Destroy Management Infrastructure'
  dependsOn: DestroySpokes
  condition: succeeded()
  jobs:
  - deployment: DestroyManagementInfra
    displayName: 'Destroy Management Infrastructure'
    environment: 'trl-hubspoke-destroy-management'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: TerraformInstaller@0
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: $(terraformVersion)

          - task: AzureCLI@2
            displayName: 'Destroy Management Infrastructure'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                cd workspaces/management
                terraform init
                terraform destroy -auto-approve

#================================================
# DESTROY HUB INFRASTRUCTURE
#================================================
- stage: DestroyHub
  displayName: 'Destroy Hub Infrastructure'
  dependsOn: DestroyManagement
  condition: succeeded()
  jobs:
  - deployment: DestroyHubInfra
    displayName: 'Destroy Hub Infrastructure'
    environment: 'trl-hubspoke-destroy-hub'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: TerraformInstaller@0
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: $(terraformVersion)

          - task: AzureCLI@2
            displayName: 'Destroy Hub Infrastructure'
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                cd workspaces/hub
                terraform init
                terraform destroy -auto-approve

#================================================
# CLEANUP VERIFICATION
#================================================
- stage: VerifyCleanup
  displayName: 'Verify Complete Destruction'
  dependsOn: DestroyHub
  condition: succeeded()
  jobs:
  - job: VerifyDestruction
    displayName: 'Verify All Resources Destroyed'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      displayName: 'Verify Cleanup'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Checking for remaining resource groups..."
          
          REMAINING_RGS=$(az group list --query "[?starts_with(name, 'trl-hubspoke-')].name" -o tsv)
          
          if [ -z "$REMAINING_RGS" ]; then
            echo "‚úÖ All TRL Hub and Spoke resource groups have been destroyed"
          else
            echo "‚ö†Ô∏è  Warning: Some resource groups still exist:"
            echo "$REMAINING_RGS"
            echo "Manual cleanup may be required"
          fi
          
          echo "üßπ Destruction verification completed"
